{"ast":null,"code":"var _jsxFileName = \"/Users/daviddoan/Desktop/UIUX/FinalPortfolio/src/pages/Develop.js\";\nimport React from \"react\";\nimport \"./Personas.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Develop = () => {\n  // process.env.PUBLIC_URL + \"/\" + 'images/Projectior_Sketch.jpg\n  let develop = process.env.PUBLIC_URL + \"/\" + \"images/bakery.png\";\n  let designguide1 = process.env.PUBLIC_URL + \"/\" + \"images/designguide1.png\";\n  let lofiphone = process.env.PUBLIC_URL + \"/\" + \"images/lofiphone.png\";\n  let hifiphone = process.env.PUBLIC_URL + \"/\" + \"images/hifiphone.png\";\n  let lofitab = process.env.PUBLIC_URL + \"/\" + \"images/lofitab.png\";\n  let hificomp = process.env.PUBLIC_URL + \"/\" + \"images/hificomp.png\";\n  let loficomp = process.env.PUBLIC_URL + \"/\" + \"images/loficomp.png\";\n  let hifitab = process.env.PUBLIC_URL + \"/\" + \"images/hifitab.png\";\n  let redesigned = process.env.PUBLIC_URL + \"/\" + \"images/redesigned.png\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"cs1300-gallery\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Development\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"In constrast to HTML, which is great for developing static webpages, as we have been previously. However, with React, we are able to build more dynamic and interactive websites to improve upon user experience and user interface. In this project, we are given the change to develop an interactive interface, using the building blocks of React, components, props, and states. To increase our familiarity with react, we created a list-based interface, which supports an aggregator, sorting, and filtering. Thousands of websites are developed everyday, wanting to share their ideas and provide a service, similar to that of start-up, with some overlap as well.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"ogwebsite\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"ogwebsite\",\n            src: develop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            id: \"toBakery\",\n            href: \"https://furioustrex777.github.io/development/\",\n            children: \"Click here to visit the deployed page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Architecture and Features\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textAlign: \"center\",\n              color: \"#49565b\"\n            },\n            children: \"Filtering\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                padding: \"0\",\n                color: \"#49565b\",\n                lineHeight: \"1.5\"\n              },\n              children: \"For the list of bakery goods, you're able to filter on two different fields with six options in total. The two types are type of bakery goods and dietary restrictions of the good.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                padding: \"0\",\n                color: \"#49565b\",\n                lineHeight: \"1.5\"\n              },\n              children: \"For the type of bakery goods, the options are: Pastry, Bread, and Cake.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                padding: \"0\",\n                color: \"#49565b\",\n                lineHeight: \"1.5\"\n              },\n              children: \"For the dietary restrictions of bakery goods, the options are: Gluten-Free, Dairy-Free, and Nut-Free.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textAlign: \"center\",\n              color: \"#49565b\"\n            },\n            children: \"Sorting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                padding: \"0\",\n                color: \"#49565b\",\n                lineHeight: \"1.5\"\n              },\n              children: \"In default, the list of goods is sorted in order of most popular to least popular.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                padding: \"0\",\n                color: \"#49565b\",\n                lineHeight: \"1.5\"\n              },\n              children: \"You are able to sort the bakery goods, from lowest to highest, including price and calories.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textAlign: \"center\",\n              color: \"#49565b\"\n            },\n            children: \"Aggregator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                padding: \"0\",\n                color: \"#49565b\",\n                lineHeight: \"1.5\"\n              },\n              children: \"The aggregator I choose to implement was a favoriting system, allowing you to add and remove bakery goods from your list of favorite goods.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                padding: \"0\",\n                color: \"#49565b\",\n                lineHeight: \"1.5\"\n              },\n              children: \"Additionally, I provided an aggregate value, the total price of the aggregate goods to allow users to easily find how much it cost to get all their favorite bakery goods.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                padding: \"0\",\n                color: \"#49565b\",\n                lineHeight: \"1.5\"\n              },\n              children: \"Finally, although not required, this aggregator system of favoriting, included the functionality of sorting and filtering of the aggregated list.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Development Process\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"The Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This application allows you look at different baked items such as pastries, cake, and bread, and find their recipes. Additionally, important nutritional information is provided such as calories and dietary restrictions. Having easy access to this information, as well as being able to favorite items and find them all at once easily adds great value to users, saving time and effort looking for this information on their own.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How I Developed the Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            padding: \"0\",\n            color: \"#49565b\",\n            lineHeight: \"1.5\"\n          },\n          children: \"I only had one component, a BakeryItem component, that holds of the information of the bakery item. This includes the image, name, description, price, calories, dietary-restrictions, and the type of the bakery item.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            padding: \"0\",\n            color: \"#49565b\",\n            lineHeight: \"1.5\"\n          },\n          children: \"The main props that were the Bakeryitems, in order to information stored in them. String variables were also used to determine the functionality of buttons.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            padding: \"0\",\n            color: \"#49565b\",\n            lineHeight: \"1.5\"\n          },\n          children: \"An options state, that acted as the list that displayed the items depending on the sorting, filtering, and if applicable, favoriting.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            padding: \"0\",\n            color: \"#49565b\",\n            lineHeight: \"1.5\"\n          },\n          children: \"Filters and filtersDiet lists states holding what filters were active.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            padding: \"0\",\n            color: \"#49565b\",\n            lineHeight: \"1.5\"\n          },\n          children: \"A sorted state that holds what sort method would be maintained throughout the manipulation of the options(display) list, and what to default to if there are no items in the combinations of filters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            padding: \"0\",\n            color: \"#49565b\",\n            lineHeight: \"1.5\"\n          },\n          children: \"A favs list state that holds all the favorited items, and a favorite boolean, allowing me two determine if a different functionality is needed if you are looking at your favorites or not.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Designing the Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            padding: \"0\",\n            color: \"#49565b\",\n            lineHeight: \"1.5\"\n          },\n          children: \"I placed the filtering and sorting options on the left, creating a better hierarchy for the overall web-app\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            padding: \"0\",\n            color: \"#49565b\",\n            lineHeight: \"1.5\"\n          },\n          children: \"I ordered the filtering options in order of most likely to be used, while allowing those options to all to remain visible throughout the whole process.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            padding: \"0\",\n            color: \"#49565b\",\n            lineHeight: \"1.5\"\n          },\n          children: \"For the BakeryItem component, I then centralized the important information, such as price and calories, and these values would stay in the same location helping with learnability and usability.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            padding: \"0\",\n            color: \"#49565b\",\n            lineHeight: \"1.5\"\n          },\n          children: \"This is accompanyed by an easy access to the favorite aggregate feature as remove and add options remained in the same location.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            padding: \"0\",\n            color: \"#49565b\",\n            lineHeight: \"1.5\"\n          },\n          children: \"Finally the BakeryItem were stacked into a scrollable list allowing multiple items to be showed along with the filtering and sorting container.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Conculusions and Thoughts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Working with react, we got to implement our coding knowledge, creating functions to provide functionality to the buttons on the page. Although not required, I wanted to make this page the best it could be, in design and functionality. All the functionality works no matter the combination of sorting, filtering, or aggergating. Additionally, I explored CSS aspects to make the buttons visibly buttons, adding hovering and before and after affects. I had a lot of fun with this assignment as there was a lot of freedom in how we could approach this project, and I felt that because of that it was a greater learning experience.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottumnav\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/Iterative\",\n        style: {\n          left: \"10px\"\n        },\n        children: \"Iterative Design\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/Personas\",\n        style: {\n          right: \"0px\"\n        },\n        children: \"Personas and Storyboarding\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Develop;\nexport default Develop;\nvar _c;\n$RefreshReg$(_c, \"Develop\");","map":{"version":3,"names":["React","Develop","develop","process","env","PUBLIC_URL","designguide1","lofiphone","hifiphone","lofitab","hificomp","loficomp","hifitab","redesigned","textAlign","color","padding","lineHeight","left","right"],"sources":["/Users/daviddoan/Desktop/UIUX/FinalPortfolio/src/pages/Develop.js"],"sourcesContent":["import React from \"react\";\nimport \"./Personas.css\";\n\nconst Develop = () => {\n  // process.env.PUBLIC_URL + \"/\" + 'images/Projectior_Sketch.jpg\n  let develop = process.env.PUBLIC_URL + \"/\" + \"images/bakery.png\";\n  let designguide1 = process.env.PUBLIC_URL + \"/\" + \"images/designguide1.png\";\n  let lofiphone = process.env.PUBLIC_URL + \"/\" + \"images/lofiphone.png\";\n  let hifiphone = process.env.PUBLIC_URL + \"/\" + \"images/hifiphone.png\";\n  let lofitab = process.env.PUBLIC_URL + \"/\" + \"images/lofitab.png\";\n  let hificomp = process.env.PUBLIC_URL + \"/\" + \"images/hificomp.png\";\n  let loficomp = process.env.PUBLIC_URL + \"/\" + \"images/loficomp.png\";\n  let hifitab = process.env.PUBLIC_URL + \"/\" + \"images/hifitab.png\";\n  let redesigned = process.env.PUBLIC_URL + \"/\" + \"images/redesigned.png\";\n\n  return (\n    <div id=\"cs1300-gallery\">\n      <section>\n        <div>\n          <h1>Development</h1>\n          {/* <h2>\n            Website: <br></br> Thai Food Connection Ordering Screen\n          </h2> */}\n\n          <p>\n            In constrast to HTML, which is great for developing static webpages,\n            as we have been previously. However, with React, we are able to\n            build more dynamic and interactive websites to improve upon user\n            experience and user interface. In this project, we are given the\n            change to develop an interactive interface, using the building\n            blocks of React, components, props, and states. To increase our\n            familiarity with react, we created a list-based interface, which\n            supports an aggregator, sorting, and filtering. Thousands of\n            websites are developed everyday, wanting to share their ideas and\n            provide a service, similar to that of start-up, with some overlap as\n            well.\n          </p>\n          <div id=\"ogwebsite\">\n            <img class=\"ogwebsite\" src={develop}></img>\n          </div>\n          <div style={{ textAlign: \"center\" }}>\n            <a\n              id=\"toBakery\"\n              href=\"https://furioustrex777.github.io/development/\"\n            >\n              Click here to visit the deployed page\n            </a>\n          </div>\n\n          {/* <p>\n            This is Thai Food Connection's website that displays their menu\n            items and allows people to order food online.\n          </p> */}\n        </div>\n      </section>\n\n      <section>\n        <h2>Architecture and Features</h2>\n\n        <div class=\"columns\">\n          <div class=\"column\">\n            <h3 style={{ textAlign: \"center\", color: \"#49565b\" }}>Filtering</h3>\n            <ul>\n              <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n                For the list of bakery goods, you're able to filter on two\n                different fields with six options in total. The two types are\n                type of bakery goods and dietary restrictions of the good.\n              </li>\n              <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n                For the type of bakery goods, the options are: Pastry, Bread,\n                and Cake.\n              </li>\n              <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n                For the dietary restrictions of bakery goods, the options are:\n                Gluten-Free, Dairy-Free, and Nut-Free.\n              </li>\n            </ul>\n          </div>\n          <div class=\"column\">\n            <h3 style={{ textAlign: \"center\", color: \"#49565b\" }}>Sorting</h3>\n            <ul>\n              <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n                In default, the list of goods is sorted in order of most popular\n                to least popular.\n              </li>\n              <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n                You are able to sort the bakery goods, from lowest to highest,\n                including price and calories.\n              </li>\n            </ul>\n          </div>\n          <div class=\"column\">\n            <h3 style={{ textAlign: \"center\", color: \"#49565b\" }}>\n              Aggregator\n            </h3>\n            <ul>\n              <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n                The aggregator I choose to implement was a favoriting system,\n                allowing you to add and remove bakery goods from your list of\n                favorite goods.\n              </li>\n              <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n                Additionally, I provided an aggregate value, the total price of\n                the aggregate goods to allow users to easily find how much it\n                cost to get all their favorite bakery goods.\n              </li>\n              <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n                Finally, although not required, this aggregator system of\n                favoriting, included the functionality of sorting and filtering\n                of the aggregated list.\n              </li>\n            </ul>\n          </div>\n        </div>\n      </section>\n\n      <section>\n        <h2>Development Process</h2>\n\n        <h3>The Application</h3>\n        <p>\n          This application allows you look at different baked items such as\n          pastries, cake, and bread, and find their recipes. Additionally,\n          important nutritional information is provided such as calories and\n          dietary restrictions. Having easy access to this information, as well\n          as being able to favorite items and find them all at once easily adds\n          great value to users, saving time and effort looking for this\n          information on their own.\n        </p>\n        {/* <br></br>\n        <br></br> */}\n\n        <h3>How I Developed the Application</h3>\n        <ul>\n          <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n            I only had one component, a BakeryItem component, that holds of the\n            information of the bakery item. This includes the image, name,\n            description, price, calories, dietary-restrictions, and the type of\n            the bakery item.\n          </li>\n          <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n            The main props that were the Bakeryitems, in order to information\n            stored in them. String variables were also used to determine the\n            functionality of buttons.\n          </li>\n          <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n            An options state, that acted as the list that displayed the items\n            depending on the sorting, filtering, and if applicable, favoriting.\n          </li>\n          <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n            Filters and filtersDiet lists states holding what filters were\n            active.\n          </li>\n          <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n            A sorted state that holds what sort method would be maintained\n            throughout the manipulation of the options(display) list, and what\n            to default to if there are no items in the combinations of filters.\n          </li>\n          <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n            A favs list state that holds all the favorited items, and a favorite\n            boolean, allowing me two determine if a different functionality is\n            needed if you are looking at your favorites or not.\n          </li>\n        </ul>\n        {/* <p>\n          For this implementation, I only had one component, a BakeryItem\n          component, that holds of the information of the bakery item. This\n          includes the image, name, description, price, calories,\n          dietary-restrictions, and the type of the bakery item.\n          <br></br>\n          <br></br>\n          The main props that were used consisted of the items themselves, in\n          order to information stored in them. Additionally, the string\n          variables, I called name, were used in order to determine the\n          functionality of buttons, as different buttons did different things to\n          the display lists through sorting and filtering of different\n          catagories.\n          <br></br>\n          <br></br>\n          In this implementation, I had six states. I had an options states,\n          that acted as the list that displayed the items depending on the\n          sorting, filtering, and if applicable, favoriting. I then had filters\n          and filtersDiet lists that held what filters were active. I then had a\n          sorted state that held what sort method would be maintained throughout\n          the manipulation of the options(display) list, and what to default to\n          if there are no items in the combinations of filters. Finally, I have\n          a favs list that holds all the favorited items, and a favorite\n          boolean, allowing me two determine if a different functionality is\n          needed if you are looking at your favorites or not.\n        </p> */}\n        <h3>Designing the Application</h3>\n        {/* <p> */}\n        <ul>\n          <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n            I placed the filtering and sorting options on the left, creating a\n            better hierarchy for the overall web-app\n          </li>\n          <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n            I ordered the filtering options in order of most likely to be used,\n            while allowing those options to all to remain visible throughout the\n            whole process.\n          </li>\n          <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n            For the BakeryItem component, I then centralized the important\n            information, such as price and calories, and these values would stay\n            in the same location helping with learnability and usability.\n          </li>\n          <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n            This is accompanyed by an easy access to the favorite aggregate\n            feature as remove and add options remained in the same location.\n          </li>\n          <li style={{ padding: \"0\", color: \"#49565b\", lineHeight: \"1.5\" }}>\n            Finally the BakeryItem were stacked into a scrollable list allowing\n            multiple items to be showed along with the filtering and sorting\n            container.\n          </li>\n        </ul>\n        {/* Because people after look at the screen from left to right, we placed\n          the filtering and sorting options on the left, creating a better\n          hierarchy for the overall web-app. I then ordered those options in\n          order of most likely to be used, while allowing those options to all\n          to remain visible throughout the whole process. For the BakeryItem\n          component, I also layed this out from left to right. I then\n          centralized the more important information such as price and calories,\n          and these values would stay in the same location no matter what\n          helping with learnability in addition to better usability. This is\n          accompanyed by an easy access to the favorite aggregate feature and\n          with clear knowledge of if it is in the aggregator or not. Finally the\n          BakeryItem were stacked into a scrollable list allowing multiple items\n          to be seen along with the filtering and sorting options helping to\n          improve usability */}\n        {/* </p> */}\n      </section>\n      <section>\n        <div>\n          <h1>Conculusions and Thoughts</h1>\n          <p>\n            Working with react, we got to implement our coding knowledge,\n            creating functions to provide functionality to the buttons on the\n            page. Although not required, I wanted to make this page the best it\n            could be, in design and functionality. All the functionality works\n            no matter the combination of sorting, filtering, or aggergating.\n            Additionally, I explored CSS aspects to make the buttons visibly\n            buttons, adding hovering and before and after affects. I had a lot\n            of fun with this assignment as there was a lot of freedom in how we\n            could approach this project, and I felt that because of that it was\n            a greater learning experience.\n          </p>\n        </div>\n      </section>\n      <div className=\"bottumnav\">\n        <a href=\"/Iterative\" style={{ left: \"10px\" }}>\n          Iterative Design\n        </a>\n        <a href=\"/Personas\" style={{ right: \"0px\" }}>\n          Personas and Storyboarding\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Develop;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}